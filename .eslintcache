[{"/Users/arpan/Desktop/PlayWithModel/my-app/src/reportWebVitals.ts":"1","/Users/arpan/Desktop/PlayWithModel/my-app/src/App.tsx":"2"},{"size":425,"mtime":1606983480796,"results":"3","hashOfConfig":"4"},{"size":7094,"mtime":1607015599153,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6una48",{"filePath":"8","messages":"9","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/Users/arpan/Desktop/PlayWithModel/my-app/src/reportWebVitals.ts",[],"/Users/arpan/Desktop/PlayWithModel/my-app/src/App.tsx",["11","12","13","14","15"],"import React, { Dispatch, SetStateAction, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { Card, Grid, Input, makeStyles, Paper, Slider } from '@material-ui/core';\nimport { truncateSync } from 'fs';\nimport axios from 'axios'\nimport * as https from 'https';\n\nconst useStyles = makeStyles({\n  root: {\n\n    width: \"40%\",\n    display: 'inline-block'\n  },\n  card: {\n\n    width: \"80%\",\n    display: 'inline-block'\n  },\n  paper: {\n    width: \"20%\",\n    textAlign: 'center',\n    display: 'inline-block'\n\n  },\n  input: {\n    width: 54,\n  },\n\n});\n\n\n\nfunction App() {\n\n  const classes = useStyles();\n  const [coax, setCoax] = useState(0.1);\n  const [freq, setFreq] = useState(4);\n  const [gammaPoint, setGammaPoint] = useState(1);\n  const [harmonicNumber, setHarmonicNumber] = useState(1);\n  const [power, setPower] = useState(-26);\n  const [a1r, set_a1r] = useState(0);\n  const [a1i, set_a1i] = useState(0);\n  const [a2r, set_a2r] = useState(0);\n  const [a2i, set_a2i] = useState(0);\n  const [b1r, set_b1r] = useState(0);\n  const [b1i, set_b1i] = useState(0);\n  const [b2r, set_b2r] = useState(0);\n  const [b2i, set_b2i] = useState(0);\n\n\n  enum FetchStatus {\n    NotRequested,\n    Loading,\n    Fetched,\n  };\n  const [fetchStatus, setFetchStatus] = useState<FetchStatus>(FetchStatus.NotRequested);\n\n  const [response, setResponse] = useState();\n\n\n  async function getData() {\n    const instance = axios.create({\n      httpsAgent: new https.Agent({  \n        rejectUnauthorized: false\n      })\n    });\n          \n    const _response = await instance.get('http://ec2-54-210-88-129.compute-1.amazonaws.com/getCurrentAndVoltageValues', {\n      headers: { 'content-type': 'application/json', \"Access-Control-Allow-Origin\": \"*\" ,  \"Access-Control-Allow-Headers\": \"Content-Type\"},\n      params: {\n        \"Param1\": coax,\n        \"Param2\": freq,\n        \"Gamma Point\": gammaPoint,\n        \"Harmonic Number\": harmonicNumber,\n        \"Power\": power,\n        \"A1 Real\": a1r * Math.pow(10, -12),\n        \"A1 Imaginary\": a1i * Math.pow(10, -12),\n        \"A2 Real\": a2r * Math.pow(10, -12),\n        \"A2 Imaginary\": a2i * Math.pow(10, -12),\n        \"B1 Real\": b1r * Math.pow(10, -12),\n        \"B1 Imaginary\": b1i * Math.pow(10, -12),\n        \"B2 Real\": b2r * Math.pow(10, -12),\n        \"B2 Imaginary\": b2i * Math.pow(10, -12),\n      }\n    });\n    setResponse(_response.data);\n  };\n\n\n  function CustomSlider(entryName: string, min: number, max: number, step: number, setValue: Dispatch<SetStateAction<number>>, getValue: () => number, unit: string) {\n    const classes = useStyles();\n\n    const handleSliderChange = (event: any, newValue: number | number[]) => {\n      setValue(newValue as any);\n      getData();\n    };\n\n\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(Number.parseFloat(event.target.value));\n      getData();\n    };\n\n    const handleBlur = () => {\n      if (getValue() < min) {\n        setValue(min);\n      } else if (getValue() > max) {\n        setValue(max);\n      }\n    };\n\n\n\n    return <><Typography id=\"discrete-slider\" gutterBottom>\n    </Typography>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Grid item xs>\n          <b>{entryName}</b>\n\n        </Grid>\n        <Grid item xs>\n\n          <Slider\n            value={typeof getValue() === 'number' ? getValue() : 0}\n            className={classes.root}\n            color='secondary'\n            valueLabelDisplay=\"auto\"\n            step={step}\n            onChange={handleSliderChange}\n\n            marks={true}\n            min={min}\n            max={max}\n          />        </Grid>\n        <Grid item xs>\n          <Input\n            className={classes.input}\n            value={getValue()}\n            margin=\"dense\"\n            onChange={handleInputChange}\n            onBlur={handleBlur}\n            inputProps={{\n              step: 10,\n              min: 0,\n              max: 100,\n              type: 'number',\n              'aria-labelledby': 'input-slider',\n            }}\n          /> {unit}\n        </Grid>\n      </Grid>\n    </>\n\n\n  }\n  return (\n    <Paper className=\"App\">\n      <p> Circuit Configuration </p>\n      {CustomSlider(\"Coax.\", 0, 0.2, 0.1, setCoax, () => coax, \"GHz\")}\n      {CustomSlider(\"Frequency.\", 0, 6, 2, setFreq, () => freq, \"dB\")}\n      {CustomSlider(\"Gamma Point\", 1, 70, 1, setGammaPoint, () => gammaPoint, \"\")}\n      {CustomSlider(\"Harmonic Number\", 1, 3, 1, setHarmonicNumber, () => harmonicNumber, \"\")}\n      {CustomSlider(\"Power\", -30, -10, 1, setPower, () => power, \"\")}\n      <p> Positional Configuration </p>\n      {CustomSlider(\"A1 Real\", -10000, 10000, 500, set_a1r, () => a1r, \"x 10⁻¹²\")}\n      {CustomSlider(\"A1 Imaginary\", -10000, 10000, 500, set_a1i, () => a1i, \"x 10⁻¹²\")}\n      {CustomSlider(\"A2 Real\", -10000, 10000, 500, set_a2r, () => a2r, \"x 10⁻¹²\")}\n      {CustomSlider(\"A2 Imaginary\", -10000, 10000, 500, set_a2i, () => a2i, \"x 10⁻¹²\")}\n      {CustomSlider(\"B1 Real\", -10000, 10000, 500, set_b1r, () => b1r, \"x 10⁻¹²\")}\n      {CustomSlider(\"B1 Imaginary\", -10000, 10000, 500, set_b1i, () => b1i, \"x 10⁻¹²\")}\n      {CustomSlider(\"B2 Real\", -10000, 10000, 500, set_b2r, () => b2r, \"x 10⁻¹²\")}\n      {CustomSlider(\"B2 Imaginary\", -10000, 10000, 500, set_b2i, () => b2i, \"x 10⁻¹²\")}\n\n      <p> </p>\n\n\n      <Card style={{ width: 800 }} className={classes.card} color={\"pink\"} >\n\n        {(response != undefined) &&\n          <>\n\n            <b> Predicted Current And Voltage Values </b>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item xs>\n                <b>I1</b>\n\n              </Grid>\n              <Grid item xs>\n\n\n                {(response as any)[\"I1\"] ?? \"\"}\n              </Grid>\n\n              </Grid>\n              <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item xs>\n                <b>I2</b>\n\n              </Grid>\n              <Grid item xs>\n\n                {(response as any)[\"I2\"] ?? \"\"}\n              </Grid>\n              </Grid>\n\n              <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n                            <Grid item xs>\n                <b>V1</b>\n              </Grid>\n              <Grid item xs>\n\n                -0.3\n        </Grid>\n\n        </Grid>\n        <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item xs>\n                <b>V2</b>\n\n              </Grid>\n              <Grid item xs>\n\n                3        </Grid>\n\n\n            </Grid>\n          </>\n\n        }\n      </Card>\n\n    </Paper >\n  );\n}\n\nexport default App;\n",{"ruleId":"16","severity":1,"message":"17","line":2,"column":8,"nodeType":"18","messageId":"19","endLine":2,"endColumn":12},{"ruleId":"16","severity":1,"message":"20","line":6,"column":10,"nodeType":"18","messageId":"19","endLine":6,"endColumn":22},{"ruleId":"16","severity":1,"message":"21","line":58,"column":10,"nodeType":"18","messageId":"19","endLine":58,"endColumn":21},{"ruleId":"16","severity":1,"message":"22","line":58,"column":23,"nodeType":"18","messageId":"19","endLine":58,"endColumn":37},{"ruleId":"23","severity":1,"message":"24","line":186,"column":20,"nodeType":"25","messageId":"26","endLine":186,"endColumn":22},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'truncateSync' is defined but never used.","'fetchStatus' is assigned a value but never used.","'setFetchStatus' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]